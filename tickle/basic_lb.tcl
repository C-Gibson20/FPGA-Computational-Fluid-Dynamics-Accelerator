#*****************************************************************************************
# Vivado (TM) v2024.2 (64-bit)
#
# basic_lb.tcl: Tcl script for re-creating project 'basic_lb'
#
# Generated by Vivado on Fri May 30 23:29:40 +0100 2025
# IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (basic_lb.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/collider.v"
#    "C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/def.vh"
#    "C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/LBMSolver.v"
#    "C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/sim_rst_driver.v"
#    "C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/lattice_boltzmann.v"
#    "C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/host_interface.v"
#    "C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/wavecfg/again.wcfg"
#    "C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/utils_1/imports/synth_1/design_1_wrapper.dcp"
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/EE2Project/misc/pynq-z1_c/PYNQ-Z1_C.xdc"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/collider.v"]"\
 "[file normalize "$origin_dir/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/def.vh"]"\
 "[file normalize "$origin_dir/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/LBMSolver.v"]"\
 "[file normalize "$origin_dir/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/sim_rst_driver.v"]"\
 "[file normalize "$origin_dir/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/lattice_boltzmann.v"]"\
 "[file normalize "$origin_dir/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/host_interface.v"]"\
 "[file normalize "$origin_dir/../2ndYear/FPGA_Project/basic_lb/wavecfg/again.wcfg"]"\
 "[file normalize "$origin_dir/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/utils_1/imports/synth_1/design_1_wrapper.dcp"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set files [list \
 "[file normalize "$origin_dir/../2ndYear/FPGA_Project/EE2Project/misc/pynq-z1_c/PYNQ-Z1_C.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "basic_lb"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "basic_lb.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../2ndYear/FPGA_Project/basic_lb"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z020clg400-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
set_msg_config  -id {17-179}  -suppress  -ruleid {14}  -source -1
set_msg_config  -id {17-179}  -suppress  -ruleid {2}  -source -1


# Set project properties
set obj [current_project]
set_property -name "board_part" -value "www.digilentinc.com:pynq-z1:part0:1.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "pynq-z1" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "target_simulator" -value "Questa" -objects $obj
set_property -name "use_inline_hdl_ip" -value "1" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "10" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "10" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "10" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "10" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "10" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "30" -objects $obj
set_property -name "xpm_libraries" -value "XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/collider.v" ]\
 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/def.vh" ]\
 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/LBMSolver.v" ]\
 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/sim_rst_driver.v" ]\
 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/lattice_boltzmann.v" ]\
 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/host_interface.v" ]\
]
set imported_files ""
foreach f $files {
  lappend imported_files [import_files -fileset sources_1 $f]
}

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "new/def.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../2ndYear/FPGA_Project/EE2Project/misc/pynq-z1_c/PYNQ-Z1_C.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../2ndYear/FPGA_Project/EE2Project/misc/pynq-z1_c/PYNQ-Z1_C.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/wavecfg/again.wcfg" ]\
]
set imported_files ""
foreach f $files {
  lappend imported_files [import_files -fileset sim_1 $f]
}

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "sim_wrapper_top" -value "1" -objects $obj
set_property -name "top" -value "sim_diagram_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/utils_1/imports/synth_1/design_1_wrapper.dcp" ]\
]
set imported_files ""
foreach f $files {
  lappend imported_files [import_files -fileset utils_1 $f]
}

# Set 'utils_1' fileset file properties for remote files
# None

# Set 'utils_1' fileset file properties for local files
set file "synth_1/design_1_wrapper.dcp"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "netlist_only" -value "0" -objects $file_obj


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files [list def.vh]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/def.vh
}
if { [get_files [list collider.v]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/collider.v
}
if { [get_files [list LBMSolver.v]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/LBMSolver.v
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# LBMSolver



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:processing_system7:5.5\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:inline_hdl:ilconstant:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  LBMSolver\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR ]

  set FIXED_IO [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO ]


  # Create ports

  # Create instance: processing_system7_0, and set properties
  set processing_system7_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7_0 ]
  set_property -dict [list \
    CONFIG.PCW_ACT_APU_PERIPHERAL_FREQMHZ {650.000000} \
    CONFIG.PCW_ACT_CAN0_PERIPHERAL_FREQMHZ {23.8095} \
    CONFIG.PCW_ACT_CAN1_PERIPHERAL_FREQMHZ {23.8095} \
    CONFIG.PCW_ACT_CAN_PERIPHERAL_FREQMHZ {10.000000} \
    CONFIG.PCW_ACT_DCI_PERIPHERAL_FREQMHZ {10.096154} \
    CONFIG.PCW_ACT_ENET0_PERIPHERAL_FREQMHZ {125.000000} \
    CONFIG.PCW_ACT_ENET1_PERIPHERAL_FREQMHZ {10.000000} \
    CONFIG.PCW_ACT_FPGA0_PERIPHERAL_FREQMHZ {100.000000} \
    CONFIG.PCW_ACT_FPGA1_PERIPHERAL_FREQMHZ {10.000000} \
    CONFIG.PCW_ACT_FPGA2_PERIPHERAL_FREQMHZ {10.000000} \
    CONFIG.PCW_ACT_FPGA3_PERIPHERAL_FREQMHZ {10.000000} \
    CONFIG.PCW_ACT_I2C_PERIPHERAL_FREQMHZ {50} \
    CONFIG.PCW_ACT_PCAP_PERIPHERAL_FREQMHZ {200.000000} \
    CONFIG.PCW_ACT_QSPI_PERIPHERAL_FREQMHZ {200.000000} \
    CONFIG.PCW_ACT_SDIO_PERIPHERAL_FREQMHZ {50.000000} \
    CONFIG.PCW_ACT_SMC_PERIPHERAL_FREQMHZ {10.000000} \
    CONFIG.PCW_ACT_SPI_PERIPHERAL_FREQMHZ {10.000000} \
    CONFIG.PCW_ACT_TPIU_PERIPHERAL_FREQMHZ {200.000000} \
    CONFIG.PCW_ACT_TTC0_CLK0_PERIPHERAL_FREQMHZ {108.333336} \
    CONFIG.PCW_ACT_TTC0_CLK1_PERIPHERAL_FREQMHZ {108.333336} \
    CONFIG.PCW_ACT_TTC0_CLK2_PERIPHERAL_FREQMHZ {108.333336} \
    CONFIG.PCW_ACT_TTC1_CLK0_PERIPHERAL_FREQMHZ {108.333336} \
    CONFIG.PCW_ACT_TTC1_CLK1_PERIPHERAL_FREQMHZ {108.333336} \
    CONFIG.PCW_ACT_TTC1_CLK2_PERIPHERAL_FREQMHZ {108.333336} \
    CONFIG.PCW_ACT_TTC_PERIPHERAL_FREQMHZ {50} \
    CONFIG.PCW_ACT_UART_PERIPHERAL_FREQMHZ {100.000000} \
    CONFIG.PCW_ACT_USB0_PERIPHERAL_FREQMHZ {60} \
    CONFIG.PCW_ACT_USB1_PERIPHERAL_FREQMHZ {60} \
    CONFIG.PCW_ACT_WDT_PERIPHERAL_FREQMHZ {108.333336} \
    CONFIG.PCW_APU_CLK_RATIO_ENABLE {6:2:1} \
    CONFIG.PCW_APU_PERIPHERAL_FREQMHZ {650} \
    CONFIG.PCW_CAN0_PERIPHERAL_CLKSRC {External} \
    CONFIG.PCW_CAN1_PERIPHERAL_CLKSRC {External} \
    CONFIG.PCW_CAN_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_CAN_PERIPHERAL_VALID {0} \
    CONFIG.PCW_CLK0_FREQ {100000000} \
    CONFIG.PCW_CLK1_FREQ {10000000} \
    CONFIG.PCW_CLK2_FREQ {10000000} \
    CONFIG.PCW_CLK3_FREQ {10000000} \
    CONFIG.PCW_CPU_CPU_6X4X_MAX_RANGE {667} \
    CONFIG.PCW_CPU_PERIPHERAL_CLKSRC {ARM PLL} \
    CONFIG.PCW_CRYSTAL_PERIPHERAL_FREQMHZ {50} \
    CONFIG.PCW_DCI_PERIPHERAL_CLKSRC {DDR PLL} \
    CONFIG.PCW_DCI_PERIPHERAL_FREQMHZ {10.159} \
    CONFIG.PCW_DDR_PERIPHERAL_CLKSRC {DDR PLL} \
    CONFIG.PCW_DDR_RAM_BASEADDR {0x00100000} \
    CONFIG.PCW_DDR_RAM_HIGHADDR {0x1FFFFFFF} \
    CONFIG.PCW_DM_WIDTH {4} \
    CONFIG.PCW_DQS_WIDTH {4} \
    CONFIG.PCW_DQ_WIDTH {32} \
    CONFIG.PCW_ENET0_BASEADDR {0xE000B000} \
    CONFIG.PCW_ENET0_ENET0_IO {MIO 16 .. 27} \
    CONFIG.PCW_ENET0_GRP_MDIO_ENABLE {1} \
    CONFIG.PCW_ENET0_GRP_MDIO_IO {MIO 52 .. 53} \
    CONFIG.PCW_ENET0_HIGHADDR {0xE000BFFF} \
    CONFIG.PCW_ENET0_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_ENET0_PERIPHERAL_ENABLE {1} \
    CONFIG.PCW_ENET0_PERIPHERAL_FREQMHZ {1000 Mbps} \
    CONFIG.PCW_ENET0_RESET_ENABLE {1} \
    CONFIG.PCW_ENET0_RESET_IO {MIO 9} \
    CONFIG.PCW_ENET1_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_ENET1_PERIPHERAL_ENABLE {0} \
    CONFIG.PCW_ENET_RESET_ENABLE {1} \
    CONFIG.PCW_ENET_RESET_POLARITY {Active Low} \
    CONFIG.PCW_ENET_RESET_SELECT {Share reset pin} \
    CONFIG.PCW_EN_4K_TIMER {0} \
    CONFIG.PCW_EN_CAN0 {0} \
    CONFIG.PCW_EN_CAN1 {0} \
    CONFIG.PCW_EN_CLK0_PORT {1} \
    CONFIG.PCW_EN_CLK1_PORT {0} \
    CONFIG.PCW_EN_CLK2_PORT {0} \
    CONFIG.PCW_EN_CLK3_PORT {0} \
    CONFIG.PCW_EN_CLKTRIG0_PORT {0} \
    CONFIG.PCW_EN_CLKTRIG1_PORT {0} \
    CONFIG.PCW_EN_CLKTRIG2_PORT {0} \
    CONFIG.PCW_EN_CLKTRIG3_PORT {0} \
    CONFIG.PCW_EN_DDR {1} \
    CONFIG.PCW_EN_EMIO_CAN0 {0} \
    CONFIG.PCW_EN_EMIO_CAN1 {0} \
    CONFIG.PCW_EN_EMIO_CD_SDIO0 {0} \
    CONFIG.PCW_EN_EMIO_CD_SDIO1 {0} \
    CONFIG.PCW_EN_EMIO_ENET0 {0} \
    CONFIG.PCW_EN_EMIO_ENET1 {0} \
    CONFIG.PCW_EN_EMIO_GPIO {0} \
    CONFIG.PCW_EN_EMIO_I2C0 {0} \
    CONFIG.PCW_EN_EMIO_I2C1 {0} \
    CONFIG.PCW_EN_EMIO_MODEM_UART0 {0} \
    CONFIG.PCW_EN_EMIO_MODEM_UART1 {0} \
    CONFIG.PCW_EN_EMIO_PJTAG {0} \
    CONFIG.PCW_EN_EMIO_SDIO0 {0} \
    CONFIG.PCW_EN_EMIO_SDIO1 {0} \
    CONFIG.PCW_EN_EMIO_SPI0 {0} \
    CONFIG.PCW_EN_EMIO_SPI1 {0} \
    CONFIG.PCW_EN_EMIO_SRAM_INT {0} \
    CONFIG.PCW_EN_EMIO_TRACE {0} \
    CONFIG.PCW_EN_EMIO_TTC0 {0} \
    CONFIG.PCW_EN_EMIO_TTC1 {0} \
    CONFIG.PCW_EN_EMIO_UART0 {0} \
    CONFIG.PCW_EN_EMIO_UART1 {0} \
    CONFIG.PCW_EN_EMIO_WDT {0} \
    CONFIG.PCW_EN_EMIO_WP_SDIO0 {0} \
    CONFIG.PCW_EN_EMIO_WP_SDIO1 {0} \
    CONFIG.PCW_EN_ENET0 {1} \
    CONFIG.PCW_EN_ENET1 {0} \
    CONFIG.PCW_EN_GPIO {1} \
    CONFIG.PCW_EN_I2C0 {0} \
    CONFIG.PCW_EN_I2C1 {0} \
    CONFIG.PCW_EN_MODEM_UART0 {0} \
    CONFIG.PCW_EN_MODEM_UART1 {0} \
    CONFIG.PCW_EN_PJTAG {0} \
    CONFIG.PCW_EN_PTP_ENET0 {0} \
    CONFIG.PCW_EN_PTP_ENET1 {0} \
    CONFIG.PCW_EN_QSPI {1} \
    CONFIG.PCW_EN_RST0_PORT {1} \
    CONFIG.PCW_EN_RST1_PORT {0} \
    CONFIG.PCW_EN_RST2_PORT {0} \
    CONFIG.PCW_EN_RST3_PORT {0} \
    CONFIG.PCW_EN_SDIO0 {1} \
    CONFIG.PCW_EN_SDIO1 {0} \
    CONFIG.PCW_EN_SMC {0} \
    CONFIG.PCW_EN_SPI0 {0} \
    CONFIG.PCW_EN_SPI1 {0} \
    CONFIG.PCW_EN_TRACE {0} \
    CONFIG.PCW_EN_TTC0 {0} \
    CONFIG.PCW_EN_TTC1 {0} \
    CONFIG.PCW_EN_UART0 {1} \
    CONFIG.PCW_EN_UART1 {0} \
    CONFIG.PCW_EN_USB0 {1} \
    CONFIG.PCW_EN_USB1 {0} \
    CONFIG.PCW_EN_WDT {0} \
    CONFIG.PCW_FCLK0_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_FCLK1_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_FCLK2_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_FCLK3_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_FCLK_CLK0_BUF {TRUE} \
    CONFIG.PCW_FPGA0_PERIPHERAL_FREQMHZ {100} \
    CONFIG.PCW_FPGA1_PERIPHERAL_FREQMHZ {50} \
    CONFIG.PCW_FPGA2_PERIPHERAL_FREQMHZ {50} \
    CONFIG.PCW_FPGA3_PERIPHERAL_FREQMHZ {50} \
    CONFIG.PCW_FPGA_FCLK0_ENABLE {1} \
    CONFIG.PCW_GPIO_BASEADDR {0xE000A000} \
    CONFIG.PCW_GPIO_EMIO_GPIO_ENABLE {0} \
    CONFIG.PCW_GPIO_HIGHADDR {0xE000AFFF} \
    CONFIG.PCW_GPIO_MIO_GPIO_ENABLE {1} \
    CONFIG.PCW_GPIO_MIO_GPIO_IO {MIO} \
    CONFIG.PCW_GPIO_PERIPHERAL_ENABLE {0} \
    CONFIG.PCW_I2C_RESET_ENABLE {1} \
    CONFIG.PCW_I2C_RESET_POLARITY {Active Low} \
    CONFIG.PCW_IMPORT_BOARD_PRESET {None} \
    CONFIG.PCW_INCLUDE_ACP_TRANS_CHECK {0} \
    CONFIG.PCW_MIO_0_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_0_PULLUP {enabled} \
    CONFIG.PCW_MIO_0_SLEW {slow} \
    CONFIG.PCW_MIO_10_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_10_PULLUP {enabled} \
    CONFIG.PCW_MIO_10_SLEW {slow} \
    CONFIG.PCW_MIO_11_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_11_PULLUP {enabled} \
    CONFIG.PCW_MIO_11_SLEW {slow} \
    CONFIG.PCW_MIO_12_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_12_PULLUP {enabled} \
    CONFIG.PCW_MIO_12_SLEW {slow} \
    CONFIG.PCW_MIO_13_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_13_PULLUP {enabled} \
    CONFIG.PCW_MIO_13_SLEW {slow} \
    CONFIG.PCW_MIO_14_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_14_PULLUP {enabled} \
    CONFIG.PCW_MIO_14_SLEW {slow} \
    CONFIG.PCW_MIO_15_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_15_PULLUP {enabled} \
    CONFIG.PCW_MIO_15_SLEW {slow} \
    CONFIG.PCW_MIO_16_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_16_PULLUP {enabled} \
    CONFIG.PCW_MIO_16_SLEW {slow} \
    CONFIG.PCW_MIO_17_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_17_PULLUP {enabled} \
    CONFIG.PCW_MIO_17_SLEW {slow} \
    CONFIG.PCW_MIO_18_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_18_PULLUP {enabled} \
    CONFIG.PCW_MIO_18_SLEW {slow} \
    CONFIG.PCW_MIO_19_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_19_PULLUP {enabled} \
    CONFIG.PCW_MIO_19_SLEW {slow} \
    CONFIG.PCW_MIO_1_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_1_PULLUP {enabled} \
    CONFIG.PCW_MIO_1_SLEW {slow} \
    CONFIG.PCW_MIO_20_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_20_PULLUP {enabled} \
    CONFIG.PCW_MIO_20_SLEW {slow} \
    CONFIG.PCW_MIO_21_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_21_PULLUP {enabled} \
    CONFIG.PCW_MIO_21_SLEW {slow} \
    CONFIG.PCW_MIO_22_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_22_PULLUP {enabled} \
    CONFIG.PCW_MIO_22_SLEW {slow} \
    CONFIG.PCW_MIO_23_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_23_PULLUP {enabled} \
    CONFIG.PCW_MIO_23_SLEW {slow} \
    CONFIG.PCW_MIO_24_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_24_PULLUP {enabled} \
    CONFIG.PCW_MIO_24_SLEW {slow} \
    CONFIG.PCW_MIO_25_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_25_PULLUP {enabled} \
    CONFIG.PCW_MIO_25_SLEW {slow} \
    CONFIG.PCW_MIO_26_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_26_PULLUP {enabled} \
    CONFIG.PCW_MIO_26_SLEW {slow} \
    CONFIG.PCW_MIO_27_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_27_PULLUP {enabled} \
    CONFIG.PCW_MIO_27_SLEW {slow} \
    CONFIG.PCW_MIO_28_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_28_PULLUP {enabled} \
    CONFIG.PCW_MIO_28_SLEW {slow} \
    CONFIG.PCW_MIO_29_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_29_PULLUP {enabled} \
    CONFIG.PCW_MIO_29_SLEW {slow} \
    CONFIG.PCW_MIO_2_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_2_SLEW {slow} \
    CONFIG.PCW_MIO_30_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_30_PULLUP {enabled} \
    CONFIG.PCW_MIO_30_SLEW {slow} \
    CONFIG.PCW_MIO_31_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_31_PULLUP {enabled} \
    CONFIG.PCW_MIO_31_SLEW {slow} \
    CONFIG.PCW_MIO_32_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_32_PULLUP {enabled} \
    CONFIG.PCW_MIO_32_SLEW {slow} \
    CONFIG.PCW_MIO_33_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_33_PULLUP {enabled} \
    CONFIG.PCW_MIO_33_SLEW {slow} \
    CONFIG.PCW_MIO_34_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_34_PULLUP {enabled} \
    CONFIG.PCW_MIO_34_SLEW {slow} \
    CONFIG.PCW_MIO_35_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_35_PULLUP {enabled} \
    CONFIG.PCW_MIO_35_SLEW {slow} \
    CONFIG.PCW_MIO_36_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_36_PULLUP {enabled} \
    CONFIG.PCW_MIO_36_SLEW {slow} \
    CONFIG.PCW_MIO_37_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_37_PULLUP {enabled} \
    CONFIG.PCW_MIO_37_SLEW {slow} \
    CONFIG.PCW_MIO_38_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_38_PULLUP {enabled} \
    CONFIG.PCW_MIO_38_SLEW {slow} \
    CONFIG.PCW_MIO_39_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_39_PULLUP {enabled} \
    CONFIG.PCW_MIO_39_SLEW {slow} \
    CONFIG.PCW_MIO_3_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_3_SLEW {slow} \
    CONFIG.PCW_MIO_40_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_40_PULLUP {enabled} \
    CONFIG.PCW_MIO_40_SLEW {slow} \
    CONFIG.PCW_MIO_41_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_41_PULLUP {enabled} \
    CONFIG.PCW_MIO_41_SLEW {slow} \
    CONFIG.PCW_MIO_42_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_42_PULLUP {enabled} \
    CONFIG.PCW_MIO_42_SLEW {slow} \
    CONFIG.PCW_MIO_43_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_43_PULLUP {enabled} \
    CONFIG.PCW_MIO_43_SLEW {slow} \
    CONFIG.PCW_MIO_44_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_44_PULLUP {enabled} \
    CONFIG.PCW_MIO_44_SLEW {slow} \
    CONFIG.PCW_MIO_45_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_45_PULLUP {enabled} \
    CONFIG.PCW_MIO_45_SLEW {slow} \
    CONFIG.PCW_MIO_46_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_46_PULLUP {enabled} \
    CONFIG.PCW_MIO_46_SLEW {slow} \
    CONFIG.PCW_MIO_47_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_47_PULLUP {enabled} \
    CONFIG.PCW_MIO_47_SLEW {slow} \
    CONFIG.PCW_MIO_48_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_48_PULLUP {enabled} \
    CONFIG.PCW_MIO_48_SLEW {slow} \
    CONFIG.PCW_MIO_49_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_49_PULLUP {enabled} \
    CONFIG.PCW_MIO_49_SLEW {slow} \
    CONFIG.PCW_MIO_4_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_4_SLEW {slow} \
    CONFIG.PCW_MIO_50_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_50_PULLUP {enabled} \
    CONFIG.PCW_MIO_50_SLEW {slow} \
    CONFIG.PCW_MIO_51_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_51_PULLUP {enabled} \
    CONFIG.PCW_MIO_51_SLEW {slow} \
    CONFIG.PCW_MIO_52_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_52_PULLUP {enabled} \
    CONFIG.PCW_MIO_52_SLEW {slow} \
    CONFIG.PCW_MIO_53_IOTYPE {LVCMOS 1.8V} \
    CONFIG.PCW_MIO_53_PULLUP {enabled} \
    CONFIG.PCW_MIO_53_SLEW {slow} \
    CONFIG.PCW_MIO_5_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_5_SLEW {slow} \
    CONFIG.PCW_MIO_6_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_6_SLEW {slow} \
    CONFIG.PCW_MIO_7_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_7_SLEW {slow} \
    CONFIG.PCW_MIO_8_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_8_SLEW {slow} \
    CONFIG.PCW_MIO_9_IOTYPE {LVCMOS 3.3V} \
    CONFIG.PCW_MIO_9_PULLUP {enabled} \
    CONFIG.PCW_MIO_9_SLEW {slow} \
    CONFIG.PCW_MIO_PRIMITIVE {54} \
    CONFIG.PCW_MIO_TREE_PERIPHERALS {GPIO#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#GPIO#Quad SPI Flash#ENET Reset#GPIO#GPIO#GPIO#GPIO#UART 0#UART 0#Enet\
0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#SD 0#SD 0#SD 0#SD 0#SD 0#SD 0#USB Reset#SD 0#GPIO#GPIO#GPIO#GPIO#Enet\
0#Enet 0} \
    CONFIG.PCW_MIO_TREE_SIGNALS {gpio[0]#qspi0_ss_b#qspi0_io[0]#qspi0_io[1]#qspi0_io[2]#qspi0_io[3]/HOLD_B#qspi0_sclk#gpio[7]#qspi_fbclk#reset#gpio[10]#gpio[11]#gpio[12]#gpio[13]#rx#tx#tx_clk#txd[0]#txd[1]#txd[2]#txd[3]#tx_ctl#rx_clk#rxd[0]#rxd[1]#rxd[2]#rxd[3]#rx_ctl#data[4]#dir#stp#nxt#data[0]#data[1]#data[2]#data[3]#clk#data[5]#data[6]#data[7]#clk#cmd#data[0]#data[1]#data[2]#data[3]#reset#cd#gpio[48]#gpio[49]#gpio[50]#gpio[51]#mdc#mdio}\
\
    CONFIG.PCW_M_AXI_GP0_ENABLE_STATIC_REMAP {0} \
    CONFIG.PCW_M_AXI_GP0_ID_WIDTH {12} \
    CONFIG.PCW_M_AXI_GP0_SUPPORT_NARROW_BURST {0} \
    CONFIG.PCW_M_AXI_GP0_THREAD_ID_WIDTH {12} \
    CONFIG.PCW_NAND_CYCLES_T_AR {1} \
    CONFIG.PCW_NAND_CYCLES_T_CLR {1} \
    CONFIG.PCW_NAND_CYCLES_T_RC {11} \
    CONFIG.PCW_NAND_CYCLES_T_REA {1} \
    CONFIG.PCW_NAND_CYCLES_T_RR {1} \
    CONFIG.PCW_NAND_CYCLES_T_WC {11} \
    CONFIG.PCW_NAND_CYCLES_T_WP {1} \
    CONFIG.PCW_NOR_CS0_T_CEOE {1} \
    CONFIG.PCW_NOR_CS0_T_PC {1} \
    CONFIG.PCW_NOR_CS0_T_RC {11} \
    CONFIG.PCW_NOR_CS0_T_TR {1} \
    CONFIG.PCW_NOR_CS0_T_WC {11} \
    CONFIG.PCW_NOR_CS0_T_WP {1} \
    CONFIG.PCW_NOR_CS0_WE_TIME {0} \
    CONFIG.PCW_NOR_CS1_T_CEOE {1} \
    CONFIG.PCW_NOR_CS1_T_PC {1} \
    CONFIG.PCW_NOR_CS1_T_RC {11} \
    CONFIG.PCW_NOR_CS1_T_TR {1} \
    CONFIG.PCW_NOR_CS1_T_WC {11} \
    CONFIG.PCW_NOR_CS1_T_WP {1} \
    CONFIG.PCW_NOR_CS1_WE_TIME {0} \
    CONFIG.PCW_NOR_SRAM_CS0_T_CEOE {1} \
    CONFIG.PCW_NOR_SRAM_CS0_T_PC {1} \
    CONFIG.PCW_NOR_SRAM_CS0_T_RC {11} \
    CONFIG.PCW_NOR_SRAM_CS0_T_TR {1} \
    CONFIG.PCW_NOR_SRAM_CS0_T_WC {11} \
    CONFIG.PCW_NOR_SRAM_CS0_T_WP {1} \
    CONFIG.PCW_NOR_SRAM_CS0_WE_TIME {0} \
    CONFIG.PCW_NOR_SRAM_CS1_T_CEOE {1} \
    CONFIG.PCW_NOR_SRAM_CS1_T_PC {1} \
    CONFIG.PCW_NOR_SRAM_CS1_T_RC {11} \
    CONFIG.PCW_NOR_SRAM_CS1_T_TR {1} \
    CONFIG.PCW_NOR_SRAM_CS1_T_WC {11} \
    CONFIG.PCW_NOR_SRAM_CS1_T_WP {1} \
    CONFIG.PCW_NOR_SRAM_CS1_WE_TIME {0} \
    CONFIG.PCW_OVERRIDE_BASIC_CLOCK {0} \
    CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY0 {0.223} \
    CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY1 {0.212} \
    CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY2 {0.085} \
    CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY3 {0.092} \
    CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_0 {0.040} \
    CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_1 {0.058} \
    CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_2 {-0.009} \
    CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_3 {-0.033} \
    CONFIG.PCW_PACKAGE_NAME {clg400} \
    CONFIG.PCW_PCAP_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_PCAP_PERIPHERAL_FREQMHZ {200} \
    CONFIG.PCW_PERIPHERAL_BOARD_PRESET {None} \
    CONFIG.PCW_PLL_BYPASSMODE_ENABLE {0} \
    CONFIG.PCW_PRESET_BANK0_VOLTAGE {LVCMOS 3.3V} \
    CONFIG.PCW_PRESET_BANK1_VOLTAGE {LVCMOS 1.8V} \
    CONFIG.PCW_PS7_SI_REV {PRODUCTION} \
    CONFIG.PCW_QSPI_GRP_FBCLK_ENABLE {1} \
    CONFIG.PCW_QSPI_GRP_FBCLK_IO {MIO 8} \
    CONFIG.PCW_QSPI_GRP_IO1_ENABLE {0} \
    CONFIG.PCW_QSPI_GRP_SINGLE_SS_ENABLE {1} \
    CONFIG.PCW_QSPI_GRP_SINGLE_SS_IO {MIO 1 .. 6} \
    CONFIG.PCW_QSPI_GRP_SS1_ENABLE {0} \
    CONFIG.PCW_QSPI_INTERNAL_HIGHADDRESS {0xFCFFFFFF} \
    CONFIG.PCW_QSPI_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_QSPI_PERIPHERAL_ENABLE {1} \
    CONFIG.PCW_QSPI_PERIPHERAL_FREQMHZ {200} \
    CONFIG.PCW_QSPI_QSPI_IO {MIO 1 .. 6} \
    CONFIG.PCW_SD0_GRP_CD_ENABLE {1} \
    CONFIG.PCW_SD0_GRP_CD_IO {MIO 47} \
    CONFIG.PCW_SD0_GRP_POW_ENABLE {0} \
    CONFIG.PCW_SD0_GRP_WP_ENABLE {0} \
    CONFIG.PCW_SD0_PERIPHERAL_ENABLE {1} \
    CONFIG.PCW_SD0_SD0_IO {MIO 40 .. 45} \
    CONFIG.PCW_SD1_PERIPHERAL_ENABLE {0} \
    CONFIG.PCW_SDIO0_BASEADDR {0xE0100000} \
    CONFIG.PCW_SDIO0_HIGHADDR {0xE0100FFF} \
    CONFIG.PCW_SDIO_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_SDIO_PERIPHERAL_FREQMHZ {50} \
    CONFIG.PCW_SDIO_PERIPHERAL_VALID {1} \
    CONFIG.PCW_SINGLE_QSPI_DATA_MODE {x4} \
    CONFIG.PCW_SMC_CYCLE_T0 {NA} \
    CONFIG.PCW_SMC_CYCLE_T1 {NA} \
    CONFIG.PCW_SMC_CYCLE_T2 {NA} \
    CONFIG.PCW_SMC_CYCLE_T3 {NA} \
    CONFIG.PCW_SMC_CYCLE_T4 {NA} \
    CONFIG.PCW_SMC_CYCLE_T5 {NA} \
    CONFIG.PCW_SMC_CYCLE_T6 {NA} \
    CONFIG.PCW_SMC_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_SMC_PERIPHERAL_VALID {0} \
    CONFIG.PCW_SPI0_PERIPHERAL_ENABLE {0} \
    CONFIG.PCW_SPI1_PERIPHERAL_ENABLE {0} \
    CONFIG.PCW_SPI_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_SPI_PERIPHERAL_VALID {0} \
    CONFIG.PCW_TPIU_PERIPHERAL_CLKSRC {External} \
    CONFIG.PCW_TTC0_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
    CONFIG.PCW_TTC0_CLK0_PERIPHERAL_DIVISOR0 {1} \
    CONFIG.PCW_TTC0_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
    CONFIG.PCW_TTC0_CLK1_PERIPHERAL_DIVISOR0 {1} \
    CONFIG.PCW_TTC0_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
    CONFIG.PCW_TTC0_CLK2_PERIPHERAL_DIVISOR0 {1} \
    CONFIG.PCW_TTC1_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
    CONFIG.PCW_TTC1_CLK0_PERIPHERAL_DIVISOR0 {1} \
    CONFIG.PCW_TTC1_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
    CONFIG.PCW_TTC1_CLK1_PERIPHERAL_DIVISOR0 {1} \
    CONFIG.PCW_TTC1_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
    CONFIG.PCW_TTC1_CLK2_PERIPHERAL_DIVISOR0 {1} \
    CONFIG.PCW_UART0_BASEADDR {0xE0000000} \
    CONFIG.PCW_UART0_BAUD_RATE {115200} \
    CONFIG.PCW_UART0_GRP_FULL_ENABLE {0} \
    CONFIG.PCW_UART0_HIGHADDR {0xE0000FFF} \
    CONFIG.PCW_UART0_PERIPHERAL_ENABLE {1} \
    CONFIG.PCW_UART0_UART0_IO {MIO 14 .. 15} \
    CONFIG.PCW_UART1_PERIPHERAL_ENABLE {0} \
    CONFIG.PCW_UART_PERIPHERAL_CLKSRC {IO PLL} \
    CONFIG.PCW_UART_PERIPHERAL_FREQMHZ {100} \
    CONFIG.PCW_UART_PERIPHERAL_VALID {1} \
    CONFIG.PCW_UIPARAM_ACT_DDR_FREQ_MHZ {525.000000} \
    CONFIG.PCW_UIPARAM_DDR_ADV_ENABLE {0} \
    CONFIG.PCW_UIPARAM_DDR_AL {0} \
    CONFIG.PCW_UIPARAM_DDR_BL {8} \
    CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY0 {0.223} \
    CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY1 {0.212} \
    CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY2 {0.085} \
    CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY3 {0.092} \
    CONFIG.PCW_UIPARAM_DDR_BUS_WIDTH {16 Bit} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_0_LENGTH_MM {25.8} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PACKAGE_LENGTH {80.4535} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_1_LENGTH_MM {25.8} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PACKAGE_LENGTH {80.4535} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_2_LENGTH_MM {0} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PACKAGE_LENGTH {80.4535} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_3_LENGTH_MM {0} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PACKAGE_LENGTH {80.4535} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_CLOCK_STOP_EN {0} \
    CONFIG.PCW_UIPARAM_DDR_DQS_0_LENGTH_MM {15.6} \
    CONFIG.PCW_UIPARAM_DDR_DQS_0_PACKAGE_LENGTH {105.056} \
    CONFIG.PCW_UIPARAM_DDR_DQS_0_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_DQS_1_LENGTH_MM {18.8} \
    CONFIG.PCW_UIPARAM_DDR_DQS_1_PACKAGE_LENGTH {66.904} \
    CONFIG.PCW_UIPARAM_DDR_DQS_1_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_DQS_2_LENGTH_MM {0} \
    CONFIG.PCW_UIPARAM_DDR_DQS_2_PACKAGE_LENGTH {89.1715} \
    CONFIG.PCW_UIPARAM_DDR_DQS_2_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_DQS_3_LENGTH_MM {0} \
    CONFIG.PCW_UIPARAM_DDR_DQS_3_PACKAGE_LENGTH {113.63} \
    CONFIG.PCW_UIPARAM_DDR_DQS_3_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_0 {0.040} \
    CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_1 {0.058} \
    CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_2 {-0.009} \
    CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_3 {-0.033} \
    CONFIG.PCW_UIPARAM_DDR_DQ_0_LENGTH_MM {16.5} \
    CONFIG.PCW_UIPARAM_DDR_DQ_0_PACKAGE_LENGTH {98.503} \
    CONFIG.PCW_UIPARAM_DDR_DQ_0_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_DQ_1_LENGTH_MM {18} \
    CONFIG.PCW_UIPARAM_DDR_DQ_1_PACKAGE_LENGTH {68.5855} \
    CONFIG.PCW_UIPARAM_DDR_DQ_1_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_DQ_2_LENGTH_MM {0} \
    CONFIG.PCW_UIPARAM_DDR_DQ_2_PACKAGE_LENGTH {90.295} \
    CONFIG.PCW_UIPARAM_DDR_DQ_2_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_DQ_3_LENGTH_MM {0} \
    CONFIG.PCW_UIPARAM_DDR_DQ_3_PACKAGE_LENGTH {103.977} \
    CONFIG.PCW_UIPARAM_DDR_DQ_3_PROPOGATION_DELAY {160} \
    CONFIG.PCW_UIPARAM_DDR_ECC {Disabled} \
    CONFIG.PCW_UIPARAM_DDR_ENABLE {1} \
    CONFIG.PCW_UIPARAM_DDR_FREQ_MHZ {525} \
    CONFIG.PCW_UIPARAM_DDR_HIGH_TEMP {Normal (0-85)} \
    CONFIG.PCW_UIPARAM_DDR_MEMORY_TYPE {DDR 3} \
    CONFIG.PCW_UIPARAM_DDR_PARTNO {MT41J256M16 RE-125} \
    CONFIG.PCW_UIPARAM_DDR_TRAIN_DATA_EYE {1} \
    CONFIG.PCW_UIPARAM_DDR_TRAIN_READ_GATE {1} \
    CONFIG.PCW_UIPARAM_DDR_TRAIN_WRITE_LEVEL {1} \
    CONFIG.PCW_UIPARAM_DDR_USE_INTERNAL_VREF {0} \
    CONFIG.PCW_UIPARAM_GENERATE_SUMMARY {NA} \
    CONFIG.PCW_USB0_BASEADDR {0xE0102000} \
    CONFIG.PCW_USB0_HIGHADDR {0xE0102fff} \
    CONFIG.PCW_USB0_PERIPHERAL_ENABLE {1} \
    CONFIG.PCW_USB0_RESET_ENABLE {1} \
    CONFIG.PCW_USB0_RESET_IO {MIO 46} \
    CONFIG.PCW_USB0_USB0_IO {MIO 28 .. 39} \
    CONFIG.PCW_USB1_PERIPHERAL_ENABLE {0} \
    CONFIG.PCW_USB_RESET_ENABLE {1} \
    CONFIG.PCW_USB_RESET_POLARITY {Active Low} \
    CONFIG.PCW_USB_RESET_SELECT {Share reset pin} \
    CONFIG.PCW_USE_AXI_FABRIC_IDLE {0} \
    CONFIG.PCW_USE_AXI_NONSECURE {0} \
    CONFIG.PCW_USE_CORESIGHT {0} \
    CONFIG.PCW_USE_CROSS_TRIGGER {0} \
    CONFIG.PCW_USE_CR_FABRIC {1} \
    CONFIG.PCW_USE_DDR_BYPASS {0} \
    CONFIG.PCW_USE_DEBUG {0} \
    CONFIG.PCW_USE_DMA0 {0} \
    CONFIG.PCW_USE_DMA1 {0} \
    CONFIG.PCW_USE_DMA2 {0} \
    CONFIG.PCW_USE_DMA3 {0} \
    CONFIG.PCW_USE_EXPANDED_IOP {0} \
    CONFIG.PCW_USE_FABRIC_INTERRUPT {0} \
    CONFIG.PCW_USE_HIGH_OCM {0} \
    CONFIG.PCW_USE_M_AXI_GP0 {1} \
    CONFIG.PCW_USE_M_AXI_GP1 {0} \
    CONFIG.PCW_USE_PROC_EVENT_BUS {0} \
    CONFIG.PCW_USE_PS_SLCR_REGISTERS {0} \
    CONFIG.PCW_USE_S_AXI_ACP {0} \
    CONFIG.PCW_USE_S_AXI_GP0 {0} \
    CONFIG.PCW_USE_S_AXI_GP1 {0} \
    CONFIG.PCW_USE_S_AXI_HP0 {0} \
    CONFIG.PCW_USE_S_AXI_HP1 {0} \
    CONFIG.PCW_USE_S_AXI_HP2 {0} \
    CONFIG.PCW_USE_S_AXI_HP3 {0} \
    CONFIG.PCW_USE_TRACE {0} \
    CONFIG.PCW_VALUE_SILVERSION {3} \
    CONFIG.PCW_WDT_PERIPHERAL_CLKSRC {CPU_1X} \
    CONFIG.PCW_WDT_PERIPHERAL_DIVISOR0 {1} \
  ] $processing_system7_0


  # Create instance: e_1, and set properties
  set e_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 e_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Fill_Remaining_Memory_Locations {true} \
    CONFIG.Load_Init_File {false} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Remaining_Memory_Locations {0400} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $e_1


  # Create instance: n_1, and set properties
  set n_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 n_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $n_1


  # Create instance: ne_1, and set properties
  set ne_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 ne_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $ne_1


  # Create instance: null_1, and set properties
  set null_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 null_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $null_1


  # Create instance: nw_1, and set properties
  set nw_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 nw_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $nw_1


  # Create instance: s_1, and set properties
  set s_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 s_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $s_1


  # Create instance: se_1, and set properties
  set se_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 se_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $se_1


  # Create instance: sw_1, and set properties
  set sw_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 sw_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $sw_1


  # Create instance: w_1, and set properties
  set w_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 w_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $w_1


  # Create instance: e_2, and set properties
  set e_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 e_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $e_2


  # Create instance: n_2, and set properties
  set n_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 n_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $n_2


  # Create instance: ne_2, and set properties
  set ne_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 ne_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $ne_2


  # Create instance: null_2, and set properties
  set null_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 null_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $null_2


  # Create instance: nw_2, and set properties
  set nw_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 nw_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $nw_2


  # Create instance: s_2, and set properties
  set s_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 s_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $s_2


  # Create instance: se_2, and set properties
  set se_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 se_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $se_2


  # Create instance: sw_2, and set properties
  set sw_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 sw_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $sw_2


  # Create instance: w_2, and set properties
  set w_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 w_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $w_2


  # Create instance: LBMSolver_0, and set properties
  set block_name LBMSolver
  set block_cell_name LBMSolver_0
  if { [catch {set LBMSolver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LBMSolver_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: rst_ps7_0_100M, and set properties
  set rst_ps7_0_100M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps7_0_100M ]

  # Create instance: u_x, and set properties
  set u_x [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 u_x ]
  set_property -dict [list \
    CONFIG.C_ALL_INPUTS {1} \
    CONFIG.C_GPIO_WIDTH {16} \
  ] $u_x


  # Create instance: u_y, and set properties
  set u_y [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 u_y ]
  set_property -dict [list \
    CONFIG.C_ALL_INPUTS {1} \
    CONFIG.C_GPIO_WIDTH {16} \
  ] $u_y


  # Create instance: rho, and set properties
  set rho [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 rho ]
  set_property -dict [list \
    CONFIG.C_ALL_INPUTS {1} \
    CONFIG.C_GPIO_WIDTH {16} \
  ] $rho


  # Create instance: axi_smc, and set properties
  set axi_smc [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 axi_smc ]
  set_property -dict [list \
    CONFIG.NUM_MI {5} \
    CONFIG.NUM_SI {1} \
  ] $axi_smc


  # Create instance: one, and set properties
  set one [ create_bd_cell -type inline_hdl -vlnv xilinx.com:inline_hdl:ilconstant:1.0 one ]

  # Create instance: step, and set properties
  set step [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 step ]
  set_property -dict [list \
    CONFIG.C_ALL_INPUTS {0} \
    CONFIG.C_ALL_OUTPUTS {1} \
    CONFIG.C_GPIO_WIDTH {16} \
  ] $step


  # Create instance: one1, and set properties
  set one1 [ create_bd_cell -type inline_hdl -vlnv xilinx.com:inline_hdl:ilconstant:1.0 one1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {366196559012407203538927822533851105019019938656699406412736188604699217105126616267084754668493524199512558778959971721726831513828265215587321417729665315613444949461926867052654257508524709633044467771089045469399217432661152494516502187138980899879553032362101446658229112366946564189999773819539065569240233173305936538039242910184658241686720824689153386419607363210969129811087224996410425344}\
\
    CONFIG.CONST_WIDTH {2500} \
  ] $one1


  # Create instance: reset_lbm, and set properties
  set reset_lbm [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 reset_lbm ]
  set_property -dict [list \
    CONFIG.C_ALL_INPUTS {0} \
    CONFIG.C_ALL_OUTPUTS {1} \
    CONFIG.C_GPIO_WIDTH {1} \
  ] $reset_lbm


  # Create interface connections
  connect_bd_intf_net -intf_net axi_smc_M00_AXI [get_bd_intf_pins axi_smc/M00_AXI] [get_bd_intf_pins rho/S_AXI]
  connect_bd_intf_net -intf_net axi_smc_M01_AXI [get_bd_intf_pins axi_smc/M01_AXI] [get_bd_intf_pins u_x/S_AXI]
  connect_bd_intf_net -intf_net axi_smc_M02_AXI [get_bd_intf_pins axi_smc/M02_AXI] [get_bd_intf_pins u_y/S_AXI]
  connect_bd_intf_net -intf_net axi_smc_M03_AXI [get_bd_intf_pins axi_smc/M03_AXI] [get_bd_intf_pins step/S_AXI]
  connect_bd_intf_net -intf_net axi_smc_M04_AXI [get_bd_intf_pins axi_smc/M04_AXI] [get_bd_intf_pins reset_lbm/S_AXI]
  connect_bd_intf_net -intf_net processing_system7_0_DDR [get_bd_intf_ports DDR] [get_bd_intf_pins processing_system7_0/DDR]
  connect_bd_intf_net -intf_net processing_system7_0_FIXED_IO [get_bd_intf_ports FIXED_IO] [get_bd_intf_pins processing_system7_0/FIXED_IO]
  connect_bd_intf_net -intf_net processing_system7_0_M_AXI_GP0 [get_bd_intf_pins processing_system7_0/M_AXI_GP0] [get_bd_intf_pins axi_smc/S00_AXI]

  # Create port connections
  connect_bd_net -net LBMSolver_0_c0_addr  [get_bd_pins LBMSolver_0/c0_addr] \
  [get_bd_pins null_1/addra]
  connect_bd_net -net LBMSolver_0_c0_data_in  [get_bd_pins LBMSolver_0/c0_data_in] \
  [get_bd_pins null_1/dina]
  connect_bd_net -net LBMSolver_0_c0_n_addr  [get_bd_pins LBMSolver_0/c0_n_addr] \
  [get_bd_pins null_2/addra]
  connect_bd_net -net LBMSolver_0_c0_n_data_in  [get_bd_pins LBMSolver_0/c0_n_data_in] \
  [get_bd_pins null_2/dina]
  connect_bd_net -net LBMSolver_0_c0_n_write_en  [get_bd_pins LBMSolver_0/c0_n_write_en] \
  [get_bd_pins null_2/wea]
  connect_bd_net -net LBMSolver_0_c0_write_en  [get_bd_pins LBMSolver_0/c0_write_en] \
  [get_bd_pins null_1/wea]
  connect_bd_net -net LBMSolver_0_ce_addr  [get_bd_pins LBMSolver_0/ce_addr] \
  [get_bd_pins e_1/addra]
  connect_bd_net -net LBMSolver_0_ce_data_in  [get_bd_pins LBMSolver_0/ce_data_in] \
  [get_bd_pins e_1/dina]
  connect_bd_net -net LBMSolver_0_ce_n_addr  [get_bd_pins LBMSolver_0/ce_n_addr] \
  [get_bd_pins e_2/addra]
  connect_bd_net -net LBMSolver_0_ce_n_data_in  [get_bd_pins LBMSolver_0/ce_n_data_in] \
  [get_bd_pins e_2/dina]
  connect_bd_net -net LBMSolver_0_ce_n_write_en  [get_bd_pins LBMSolver_0/ce_n_write_en] \
  [get_bd_pins e_2/wea]
  connect_bd_net -net LBMSolver_0_ce_write_en  [get_bd_pins LBMSolver_0/ce_write_en] \
  [get_bd_pins e_1/wea]
  connect_bd_net -net LBMSolver_0_cn_addr  [get_bd_pins LBMSolver_0/cn_addr] \
  [get_bd_pins n_1/addra]
  connect_bd_net -net LBMSolver_0_cn_data_in  [get_bd_pins LBMSolver_0/cn_data_in] \
  [get_bd_pins n_1/dina]
  connect_bd_net -net LBMSolver_0_cn_n_addr  [get_bd_pins LBMSolver_0/cn_n_addr] \
  [get_bd_pins n_2/addra]
  connect_bd_net -net LBMSolver_0_cn_n_data_in  [get_bd_pins LBMSolver_0/cn_n_data_in] \
  [get_bd_pins n_2/dina]
  connect_bd_net -net LBMSolver_0_cn_n_write_en  [get_bd_pins LBMSolver_0/cn_n_write_en] \
  [get_bd_pins n_2/wea]
  connect_bd_net -net LBMSolver_0_cn_write_en  [get_bd_pins LBMSolver_0/cn_write_en] \
  [get_bd_pins n_1/wea]
  connect_bd_net -net LBMSolver_0_cne_addr  [get_bd_pins LBMSolver_0/cne_addr] \
  [get_bd_pins ne_1/addra]
  connect_bd_net -net LBMSolver_0_cne_data_in  [get_bd_pins LBMSolver_0/cne_data_in] \
  [get_bd_pins ne_1/dina]
  connect_bd_net -net LBMSolver_0_cne_n_addr  [get_bd_pins LBMSolver_0/cne_n_addr] \
  [get_bd_pins ne_2/addra]
  connect_bd_net -net LBMSolver_0_cne_n_data_in  [get_bd_pins LBMSolver_0/cne_n_data_in] \
  [get_bd_pins ne_2/dina]
  connect_bd_net -net LBMSolver_0_cne_n_write_en  [get_bd_pins LBMSolver_0/cne_n_write_en] \
  [get_bd_pins ne_2/wea]
  connect_bd_net -net LBMSolver_0_cne_write_en  [get_bd_pins LBMSolver_0/cne_write_en] \
  [get_bd_pins ne_1/wea]
  connect_bd_net -net LBMSolver_0_cnw_addr  [get_bd_pins LBMSolver_0/cnw_addr] \
  [get_bd_pins nw_1/addra]
  connect_bd_net -net LBMSolver_0_cnw_data_in  [get_bd_pins LBMSolver_0/cnw_data_in] \
  [get_bd_pins nw_1/dina]
  connect_bd_net -net LBMSolver_0_cnw_n_addr  [get_bd_pins LBMSolver_0/cnw_n_addr] \
  [get_bd_pins nw_2/addra]
  connect_bd_net -net LBMSolver_0_cnw_n_data_in  [get_bd_pins LBMSolver_0/cnw_n_data_in] \
  [get_bd_pins nw_2/dina]
  connect_bd_net -net LBMSolver_0_cnw_n_write_en  [get_bd_pins LBMSolver_0/cnw_n_write_en] \
  [get_bd_pins nw_2/wea]
  connect_bd_net -net LBMSolver_0_cnw_write_en  [get_bd_pins LBMSolver_0/cnw_write_en] \
  [get_bd_pins nw_1/wea]
  connect_bd_net -net LBMSolver_0_cs_addr  [get_bd_pins LBMSolver_0/cs_addr] \
  [get_bd_pins s_1/addra]
  connect_bd_net -net LBMSolver_0_cs_data_in  [get_bd_pins LBMSolver_0/cs_data_in] \
  [get_bd_pins s_1/dina]
  connect_bd_net -net LBMSolver_0_cs_n_addr  [get_bd_pins LBMSolver_0/cs_n_addr] \
  [get_bd_pins s_2/addra]
  connect_bd_net -net LBMSolver_0_cs_n_data_in  [get_bd_pins LBMSolver_0/cs_n_data_in] \
  [get_bd_pins s_2/dina]
  connect_bd_net -net LBMSolver_0_cs_n_write_en  [get_bd_pins LBMSolver_0/cs_n_write_en] \
  [get_bd_pins s_2/wea]
  connect_bd_net -net LBMSolver_0_cs_write_en  [get_bd_pins LBMSolver_0/cs_write_en] \
  [get_bd_pins s_1/wea]
  connect_bd_net -net LBMSolver_0_cse_addr  [get_bd_pins LBMSolver_0/cse_addr] \
  [get_bd_pins se_1/addra]
  connect_bd_net -net LBMSolver_0_cse_data_in  [get_bd_pins LBMSolver_0/cse_data_in] \
  [get_bd_pins se_1/dina]
  connect_bd_net -net LBMSolver_0_cse_n_addr  [get_bd_pins LBMSolver_0/cse_n_addr] \
  [get_bd_pins se_2/addra]
  connect_bd_net -net LBMSolver_0_cse_n_data_in  [get_bd_pins LBMSolver_0/cse_n_data_in] \
  [get_bd_pins se_2/dina]
  connect_bd_net -net LBMSolver_0_cse_n_write_en  [get_bd_pins LBMSolver_0/cse_n_write_en] \
  [get_bd_pins se_2/wea]
  connect_bd_net -net LBMSolver_0_cse_write_en  [get_bd_pins LBMSolver_0/cse_write_en] \
  [get_bd_pins se_1/wea]
  connect_bd_net -net LBMSolver_0_csw_addr  [get_bd_pins LBMSolver_0/csw_addr] \
  [get_bd_pins sw_1/addra]
  connect_bd_net -net LBMSolver_0_csw_data_in  [get_bd_pins LBMSolver_0/csw_data_in] \
  [get_bd_pins sw_1/dina]
  connect_bd_net -net LBMSolver_0_csw_n_addr  [get_bd_pins LBMSolver_0/csw_n_addr] \
  [get_bd_pins sw_2/addra]
  connect_bd_net -net LBMSolver_0_csw_n_data_in  [get_bd_pins LBMSolver_0/csw_n_data_in] \
  [get_bd_pins sw_2/dina]
  connect_bd_net -net LBMSolver_0_csw_n_write_en  [get_bd_pins LBMSolver_0/csw_n_write_en] \
  [get_bd_pins sw_2/wea]
  connect_bd_net -net LBMSolver_0_csw_write_en  [get_bd_pins LBMSolver_0/csw_write_en] \
  [get_bd_pins sw_1/wea]
  connect_bd_net -net LBMSolver_0_cw_addr  [get_bd_pins LBMSolver_0/cw_addr] \
  [get_bd_pins w_1/addra]
  connect_bd_net -net LBMSolver_0_cw_data_in  [get_bd_pins LBMSolver_0/cw_data_in] \
  [get_bd_pins w_1/dina]
  connect_bd_net -net LBMSolver_0_cw_n_addr  [get_bd_pins LBMSolver_0/cw_n_addr] \
  [get_bd_pins w_2/addra]
  connect_bd_net -net LBMSolver_0_cw_n_data_in  [get_bd_pins LBMSolver_0/cw_n_data_in] \
  [get_bd_pins w_2/dina]
  connect_bd_net -net LBMSolver_0_cw_n_write_en  [get_bd_pins LBMSolver_0/cw_n_write_en] \
  [get_bd_pins w_2/wea]
  connect_bd_net -net LBMSolver_0_cw_write_en  [get_bd_pins LBMSolver_0/cw_write_en] \
  [get_bd_pins w_1/wea]
  connect_bd_net -net LBMSolver_0_rho  [get_bd_pins LBMSolver_0/rho] \
  [get_bd_pins rho/gpio_io_i]
  connect_bd_net -net LBMSolver_0_u_x  [get_bd_pins LBMSolver_0/u_x] \
  [get_bd_pins u_x/gpio_io_i]
  connect_bd_net -net LBMSolver_0_u_y  [get_bd_pins LBMSolver_0/u_y] \
  [get_bd_pins u_y/gpio_io_i]
  connect_bd_net -net e_1_douta  [get_bd_pins e_1/douta] \
  [get_bd_pins LBMSolver_0/ce_data_out]
  connect_bd_net -net e_2_douta  [get_bd_pins e_2/douta] \
  [get_bd_pins LBMSolver_0/ce_n_data_out]
  connect_bd_net -net ilconstant_0_dout  [get_bd_pins one/dout] \
  [get_bd_pins LBMSolver_0/en]
  connect_bd_net -net n_1_douta  [get_bd_pins n_1/douta] \
  [get_bd_pins LBMSolver_0/cn_data_out]
  connect_bd_net -net n_2_douta  [get_bd_pins n_2/douta] \
  [get_bd_pins LBMSolver_0/cn_n_data_out]
  connect_bd_net -net ne_1_douta  [get_bd_pins ne_1/douta] \
  [get_bd_pins LBMSolver_0/cne_data_out]
  connect_bd_net -net ne_2_douta  [get_bd_pins ne_2/douta] \
  [get_bd_pins LBMSolver_0/cne_n_data_out]
  connect_bd_net -net null_1_douta  [get_bd_pins null_1/douta] \
  [get_bd_pins LBMSolver_0/c0_data_out]
  connect_bd_net -net null_2_douta  [get_bd_pins null_2/douta] \
  [get_bd_pins LBMSolver_0/c0_n_data_out]
  connect_bd_net -net nw_1_douta  [get_bd_pins nw_1/douta] \
  [get_bd_pins LBMSolver_0/cnw_data_out]
  connect_bd_net -net nw_2_douta  [get_bd_pins nw_2/douta] \
  [get_bd_pins LBMSolver_0/cnw_n_data_out]
  connect_bd_net -net one1_dout  [get_bd_pins one1/dout] \
  [get_bd_pins LBMSolver_0/barriers]
  connect_bd_net -net processing_system7_0_FCLK_CLK0  [get_bd_pins processing_system7_0/FCLK_CLK0] \
  [get_bd_pins processing_system7_0/M_AXI_GP0_ACLK] \
  [get_bd_pins rst_ps7_0_100M/slowest_sync_clk] \
  [get_bd_pins null_1/clka] \
  [get_bd_pins null_2/clka] \
  [get_bd_pins n_1/clka] \
  [get_bd_pins n_2/clka] \
  [get_bd_pins ne_1/clka] \
  [get_bd_pins ne_2/clka] \
  [get_bd_pins e_1/clka] \
  [get_bd_pins e_2/clka] \
  [get_bd_pins se_1/clka] \
  [get_bd_pins se_2/clka] \
  [get_bd_pins s_1/clka] \
  [get_bd_pins s_2/clka] \
  [get_bd_pins sw_1/clka] \
  [get_bd_pins sw_2/clka] \
  [get_bd_pins w_1/clka] \
  [get_bd_pins w_2/clka] \
  [get_bd_pins nw_1/clka] \
  [get_bd_pins nw_2/clka] \
  [get_bd_pins axi_smc/aclk] \
  [get_bd_pins rho/s_axi_aclk] \
  [get_bd_pins u_x/s_axi_aclk] \
  [get_bd_pins u_y/s_axi_aclk] \
  [get_bd_pins step/s_axi_aclk] \
  [get_bd_pins reset_lbm/s_axi_aclk] \
  [get_bd_pins LBMSolver_0/clk]
  connect_bd_net -net processing_system7_0_FCLK_RESET0_N  [get_bd_pins processing_system7_0/FCLK_RESET0_N] \
  [get_bd_pins rst_ps7_0_100M/ext_reset_in]
  connect_bd_net -net reset_lbm_gpio_io_o  [get_bd_pins reset_lbm/gpio_io_o] \
  [get_bd_pins LBMSolver_0/rst]
  connect_bd_net -net rho1_gpio_io_o  [get_bd_pins step/gpio_io_o] \
  [get_bd_pins LBMSolver_0/step]
  connect_bd_net -net rst_ps7_0_100M_peripheral_aresetn  [get_bd_pins rst_ps7_0_100M/peripheral_aresetn] \
  [get_bd_pins rho/s_axi_aresetn] \
  [get_bd_pins axi_smc/aresetn] \
  [get_bd_pins u_x/s_axi_aresetn] \
  [get_bd_pins u_y/s_axi_aresetn] \
  [get_bd_pins step/s_axi_aresetn] \
  [get_bd_pins reset_lbm/s_axi_aresetn]
  connect_bd_net -net s_1_douta  [get_bd_pins s_1/douta] \
  [get_bd_pins LBMSolver_0/cs_data_out]
  connect_bd_net -net s_2_douta  [get_bd_pins s_2/douta] \
  [get_bd_pins LBMSolver_0/cs_n_data_out]
  connect_bd_net -net se_1_douta  [get_bd_pins se_1/douta] \
  [get_bd_pins LBMSolver_0/cse_data_out]
  connect_bd_net -net se_2_douta  [get_bd_pins se_2/douta] \
  [get_bd_pins LBMSolver_0/cse_n_data_out]
  connect_bd_net -net sw_1_douta  [get_bd_pins sw_1/douta] \
  [get_bd_pins LBMSolver_0/csw_data_out]
  connect_bd_net -net sw_2_douta  [get_bd_pins sw_2/douta] \
  [get_bd_pins LBMSolver_0/csw_n_data_out]
  connect_bd_net -net w_1_douta  [get_bd_pins w_1/douta] \
  [get_bd_pins LBMSolver_0/cw_data_out]
  connect_bd_net -net w_2_douta  [get_bd_pins w_2/douta] \
  [get_bd_pins LBMSolver_0/cw_n_data_out]

  # Create address segments
  assign_bd_address -offset 0x41240000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs reset_lbm/S_AXI/Reg] -force
  assign_bd_address -offset 0x41230000 -range 0x00010000 -with_name SEG_rho1_Reg -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs step/S_AXI/Reg] -force
  assign_bd_address -offset 0x41200000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs rho/S_AXI/Reg] -force
  assign_bd_address -offset 0x41210000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs u_x/S_AXI/Reg] -force
  assign_bd_address -offset 0x41220000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs u_y/S_AXI/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_gid_msg -ssname BD::TCL -id 2050 -severity "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_design_1()

cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

if { [get_files [list def.vh]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/def.vh
}
if { [get_files [list collider.v]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/collider.v
}
if { [get_files [list LBMSolver.v]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/LBMSolver.v
}
if { [get_files [list def.vh]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/def.vh
}
if { [get_files [list sim_rst_driver.v]] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/Nishant/Desktop/2ndYear/FPGA_Project/basic_lb/basic_lb.srcs/sources_1/new/sim_rst_driver.v
}


# Proc to create BD sim_diagram
proc cr_bd_sim_diagram { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# LBMSolver, sim_rst_driver



  # CHANGE DESIGN NAME HERE
  set design_name sim_diagram

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:inline_hdl:ilconstant:1.0\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  LBMSolver\
  sim_rst_driver\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set u_x_0 [ create_bd_port -dir O -from 15 -to 0 u_x_0 ]
  set u_y_0 [ create_bd_port -dir O -from 15 -to 0 u_y_0 ]
  set rho_0 [ create_bd_port -dir O -from 15 -to 0 rho_0 ]

  # Create instance: LBMSolver_0, and set properties
  set block_name LBMSolver
  set block_cell_name LBMSolver_0
  if { [catch {set LBMSolver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LBMSolver_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: e_1, and set properties
  set e_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 e_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Fill_Remaining_Memory_Locations {true} \
    CONFIG.Load_Init_File {false} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Remaining_Memory_Locations {0400} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $e_1


  # Create instance: e_2, and set properties
  set e_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 e_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $e_2


  # Create instance: n_1, and set properties
  set n_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 n_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $n_1


  # Create instance: n_2, and set properties
  set n_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 n_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $n_2


  # Create instance: ne_1, and set properties
  set ne_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 ne_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $ne_1


  # Create instance: ne_2, and set properties
  set ne_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 ne_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $ne_2


  # Create instance: null_1, and set properties
  set null_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 null_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $null_1


  # Create instance: null_2, and set properties
  set null_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 null_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $null_2


  # Create instance: nw_1, and set properties
  set nw_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 nw_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $nw_1


  # Create instance: nw_2, and set properties
  set nw_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 nw_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $nw_2


  # Create instance: one, and set properties
  set one [ create_bd_cell -type inline_hdl -vlnv xilinx.com:inline_hdl:ilconstant:1.0 one ]

  # Create instance: one1, and set properties
  set one1 [ create_bd_cell -type inline_hdl -vlnv xilinx.com:inline_hdl:ilconstant:1.0 one1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {366196559012407203538927822533851105019019938656699406412736188604699217105126616267084754668493524199512558778959971721726831513828265215587321417729665315613444949461926867052654257508524709633044467771089045469399217432661152494516502187138980899879553032362101446658229112366946564189999773819539065569240233173305936538039242910184658241686720824689153386419607363210969129811087224996410425344}\
\
    CONFIG.CONST_WIDTH {2500} \
  ] $one1


  # Create instance: s_1, and set properties
  set s_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 s_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $s_1


  # Create instance: s_2, and set properties
  set s_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 s_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $s_2


  # Create instance: se_1, and set properties
  set se_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 se_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $se_1


  # Create instance: se_2, and set properties
  set se_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 se_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $se_2


  # Create instance: sw_1, and set properties
  set sw_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 sw_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $sw_1


  # Create instance: sw_2, and set properties
  set sw_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 sw_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $sw_2


  # Create instance: w_1, and set properties
  set w_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 w_1 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $w_1


  # Create instance: w_2, and set properties
  set w_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 w_2 ]
  set_property -dict [list \
    CONFIG.Enable_A {Always_Enabled} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Write_Depth_A {2500} \
    CONFIG.Write_Width_A {16} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $w_2


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {50000} \
    CONFIG.CONST_WIDTH {32} \
  ] $xlconstant_0


  # Create instance: sim_rst_driver_0, and set properties
  set block_name sim_rst_driver
  set block_cell_name sim_rst_driver_0
  if { [catch {set sim_rst_driver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $sim_rst_driver_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create port connections
  connect_bd_net -net LBMSolver_0_c0_addr  [get_bd_pins LBMSolver_0/c0_addr] \
  [get_bd_pins null_1/addra]
  connect_bd_net -net LBMSolver_0_c0_data_in  [get_bd_pins LBMSolver_0/c0_data_in] \
  [get_bd_pins null_1/dina]
  connect_bd_net -net LBMSolver_0_c0_n_addr  [get_bd_pins LBMSolver_0/c0_n_addr] \
  [get_bd_pins null_2/addra]
  connect_bd_net -net LBMSolver_0_c0_n_data_in  [get_bd_pins LBMSolver_0/c0_n_data_in] \
  [get_bd_pins null_2/dina]
  connect_bd_net -net LBMSolver_0_c0_n_write_en  [get_bd_pins LBMSolver_0/c0_n_write_en] \
  [get_bd_pins null_2/wea]
  connect_bd_net -net LBMSolver_0_c0_write_en  [get_bd_pins LBMSolver_0/c0_write_en] \
  [get_bd_pins null_1/wea]
  connect_bd_net -net LBMSolver_0_ce_addr  [get_bd_pins LBMSolver_0/ce_addr] \
  [get_bd_pins e_1/addra]
  connect_bd_net -net LBMSolver_0_ce_data_in  [get_bd_pins LBMSolver_0/ce_data_in] \
  [get_bd_pins e_1/dina]
  connect_bd_net -net LBMSolver_0_ce_n_addr  [get_bd_pins LBMSolver_0/ce_n_addr] \
  [get_bd_pins e_2/addra]
  connect_bd_net -net LBMSolver_0_ce_n_data_in  [get_bd_pins LBMSolver_0/ce_n_data_in] \
  [get_bd_pins e_2/dina]
  connect_bd_net -net LBMSolver_0_ce_n_write_en  [get_bd_pins LBMSolver_0/ce_n_write_en] \
  [get_bd_pins e_2/wea]
  connect_bd_net -net LBMSolver_0_ce_write_en  [get_bd_pins LBMSolver_0/ce_write_en] \
  [get_bd_pins e_1/wea]
  connect_bd_net -net LBMSolver_0_cn_addr  [get_bd_pins LBMSolver_0/cn_addr] \
  [get_bd_pins n_1/addra]
  connect_bd_net -net LBMSolver_0_cn_data_in  [get_bd_pins LBMSolver_0/cn_data_in] \
  [get_bd_pins n_1/dina]
  connect_bd_net -net LBMSolver_0_cn_n_addr  [get_bd_pins LBMSolver_0/cn_n_addr] \
  [get_bd_pins n_2/addra]
  connect_bd_net -net LBMSolver_0_cn_n_data_in  [get_bd_pins LBMSolver_0/cn_n_data_in] \
  [get_bd_pins n_2/dina]
  connect_bd_net -net LBMSolver_0_cn_n_write_en  [get_bd_pins LBMSolver_0/cn_n_write_en] \
  [get_bd_pins n_2/wea]
  connect_bd_net -net LBMSolver_0_cn_write_en  [get_bd_pins LBMSolver_0/cn_write_en] \
  [get_bd_pins n_1/wea]
  connect_bd_net -net LBMSolver_0_cne_addr  [get_bd_pins LBMSolver_0/cne_addr] \
  [get_bd_pins ne_1/addra]
  connect_bd_net -net LBMSolver_0_cne_data_in  [get_bd_pins LBMSolver_0/cne_data_in] \
  [get_bd_pins ne_1/dina]
  connect_bd_net -net LBMSolver_0_cne_n_addr  [get_bd_pins LBMSolver_0/cne_n_addr] \
  [get_bd_pins ne_2/addra]
  connect_bd_net -net LBMSolver_0_cne_n_data_in  [get_bd_pins LBMSolver_0/cne_n_data_in] \
  [get_bd_pins ne_2/dina]
  connect_bd_net -net LBMSolver_0_cne_n_write_en  [get_bd_pins LBMSolver_0/cne_n_write_en] \
  [get_bd_pins ne_2/wea]
  connect_bd_net -net LBMSolver_0_cne_write_en  [get_bd_pins LBMSolver_0/cne_write_en] \
  [get_bd_pins ne_1/wea]
  connect_bd_net -net LBMSolver_0_cnw_addr  [get_bd_pins LBMSolver_0/cnw_addr] \
  [get_bd_pins nw_1/addra]
  connect_bd_net -net LBMSolver_0_cnw_data_in  [get_bd_pins LBMSolver_0/cnw_data_in] \
  [get_bd_pins nw_1/dina]
  connect_bd_net -net LBMSolver_0_cnw_n_addr  [get_bd_pins LBMSolver_0/cnw_n_addr] \
  [get_bd_pins nw_2/addra]
  connect_bd_net -net LBMSolver_0_cnw_n_data_in  [get_bd_pins LBMSolver_0/cnw_n_data_in] \
  [get_bd_pins nw_2/dina]
  connect_bd_net -net LBMSolver_0_cnw_n_write_en  [get_bd_pins LBMSolver_0/cnw_n_write_en] \
  [get_bd_pins nw_2/wea]
  connect_bd_net -net LBMSolver_0_cnw_write_en  [get_bd_pins LBMSolver_0/cnw_write_en] \
  [get_bd_pins nw_1/wea]
  connect_bd_net -net LBMSolver_0_cs_addr  [get_bd_pins LBMSolver_0/cs_addr] \
  [get_bd_pins s_1/addra]
  connect_bd_net -net LBMSolver_0_cs_data_in  [get_bd_pins LBMSolver_0/cs_data_in] \
  [get_bd_pins s_1/dina]
  connect_bd_net -net LBMSolver_0_cs_n_addr  [get_bd_pins LBMSolver_0/cs_n_addr] \
  [get_bd_pins s_2/addra]
  connect_bd_net -net LBMSolver_0_cs_n_data_in  [get_bd_pins LBMSolver_0/cs_n_data_in] \
  [get_bd_pins s_2/dina]
  connect_bd_net -net LBMSolver_0_cs_n_write_en  [get_bd_pins LBMSolver_0/cs_n_write_en] \
  [get_bd_pins s_2/wea]
  connect_bd_net -net LBMSolver_0_cs_write_en  [get_bd_pins LBMSolver_0/cs_write_en] \
  [get_bd_pins s_1/wea]
  connect_bd_net -net LBMSolver_0_cse_addr  [get_bd_pins LBMSolver_0/cse_addr] \
  [get_bd_pins se_1/addra]
  connect_bd_net -net LBMSolver_0_cse_data_in  [get_bd_pins LBMSolver_0/cse_data_in] \
  [get_bd_pins se_1/dina]
  connect_bd_net -net LBMSolver_0_cse_n_addr  [get_bd_pins LBMSolver_0/cse_n_addr] \
  [get_bd_pins se_2/addra]
  connect_bd_net -net LBMSolver_0_cse_n_data_in  [get_bd_pins LBMSolver_0/cse_n_data_in] \
  [get_bd_pins se_2/dina]
  connect_bd_net -net LBMSolver_0_cse_n_write_en  [get_bd_pins LBMSolver_0/cse_n_write_en] \
  [get_bd_pins se_2/wea]
  connect_bd_net -net LBMSolver_0_cse_write_en  [get_bd_pins LBMSolver_0/cse_write_en] \
  [get_bd_pins se_1/wea]
  connect_bd_net -net LBMSolver_0_csw_addr  [get_bd_pins LBMSolver_0/csw_addr] \
  [get_bd_pins sw_1/addra]
  connect_bd_net -net LBMSolver_0_csw_data_in  [get_bd_pins LBMSolver_0/csw_data_in] \
  [get_bd_pins sw_1/dina]
  connect_bd_net -net LBMSolver_0_csw_n_addr  [get_bd_pins LBMSolver_0/csw_n_addr] \
  [get_bd_pins sw_2/addra]
  connect_bd_net -net LBMSolver_0_csw_n_data_in  [get_bd_pins LBMSolver_0/csw_n_data_in] \
  [get_bd_pins sw_2/dina]
  connect_bd_net -net LBMSolver_0_csw_n_write_en  [get_bd_pins LBMSolver_0/csw_n_write_en] \
  [get_bd_pins sw_2/wea]
  connect_bd_net -net LBMSolver_0_csw_write_en  [get_bd_pins LBMSolver_0/csw_write_en] \
  [get_bd_pins sw_1/wea]
  connect_bd_net -net LBMSolver_0_cw_addr  [get_bd_pins LBMSolver_0/cw_addr] \
  [get_bd_pins w_1/addra]
  connect_bd_net -net LBMSolver_0_cw_data_in  [get_bd_pins LBMSolver_0/cw_data_in] \
  [get_bd_pins w_1/dina]
  connect_bd_net -net LBMSolver_0_cw_n_addr  [get_bd_pins LBMSolver_0/cw_n_addr] \
  [get_bd_pins w_2/addra]
  connect_bd_net -net LBMSolver_0_cw_n_data_in  [get_bd_pins LBMSolver_0/cw_n_data_in] \
  [get_bd_pins w_2/dina]
  connect_bd_net -net LBMSolver_0_cw_n_write_en  [get_bd_pins LBMSolver_0/cw_n_write_en] \
  [get_bd_pins w_2/wea]
  connect_bd_net -net LBMSolver_0_cw_write_en  [get_bd_pins LBMSolver_0/cw_write_en] \
  [get_bd_pins w_1/wea]
  connect_bd_net -net LBMSolver_0_rho  [get_bd_pins LBMSolver_0/rho] \
  [get_bd_ports rho_0]
  connect_bd_net -net LBMSolver_0_u_x  [get_bd_pins LBMSolver_0/u_x] \
  [get_bd_ports u_x_0]
  connect_bd_net -net LBMSolver_0_u_y  [get_bd_pins LBMSolver_0/u_y] \
  [get_bd_ports u_y_0]
  connect_bd_net -net e_1_douta  [get_bd_pins e_1/douta] \
  [get_bd_pins LBMSolver_0/ce_data_out]
  connect_bd_net -net e_2_douta  [get_bd_pins e_2/douta] \
  [get_bd_pins LBMSolver_0/ce_n_data_out]
  connect_bd_net -net ilconstant_0_dout  [get_bd_pins one/dout] \
  [get_bd_pins LBMSolver_0/en]
  connect_bd_net -net n_1_douta  [get_bd_pins n_1/douta] \
  [get_bd_pins LBMSolver_0/cn_data_out]
  connect_bd_net -net n_2_douta  [get_bd_pins n_2/douta] \
  [get_bd_pins LBMSolver_0/cn_n_data_out]
  connect_bd_net -net ne_1_douta  [get_bd_pins ne_1/douta] \
  [get_bd_pins LBMSolver_0/cne_data_out]
  connect_bd_net -net ne_2_douta  [get_bd_pins ne_2/douta] \
  [get_bd_pins LBMSolver_0/cne_n_data_out]
  connect_bd_net -net null_1_douta  [get_bd_pins null_1/douta] \
  [get_bd_pins LBMSolver_0/c0_data_out]
  connect_bd_net -net null_2_douta  [get_bd_pins null_2/douta] \
  [get_bd_pins LBMSolver_0/c0_n_data_out]
  connect_bd_net -net nw_1_douta  [get_bd_pins nw_1/douta] \
  [get_bd_pins LBMSolver_0/cnw_data_out]
  connect_bd_net -net nw_2_douta  [get_bd_pins nw_2/douta] \
  [get_bd_pins LBMSolver_0/cnw_n_data_out]
  connect_bd_net -net one1_dout  [get_bd_pins one1/dout] \
  [get_bd_pins LBMSolver_0/barriers]
  connect_bd_net -net processing_system7_0_FCLK_CLK0  [get_bd_pins sim_rst_driver_0/clk] \
  [get_bd_pins null_1/clka] \
  [get_bd_pins null_2/clka] \
  [get_bd_pins n_1/clka] \
  [get_bd_pins n_2/clka] \
  [get_bd_pins ne_1/clka] \
  [get_bd_pins ne_2/clka] \
  [get_bd_pins e_1/clka] \
  [get_bd_pins e_2/clka] \
  [get_bd_pins se_1/clka] \
  [get_bd_pins se_2/clka] \
  [get_bd_pins s_1/clka] \
  [get_bd_pins s_2/clka] \
  [get_bd_pins sw_1/clka] \
  [get_bd_pins sw_2/clka] \
  [get_bd_pins w_1/clka] \
  [get_bd_pins w_2/clka] \
  [get_bd_pins nw_1/clka] \
  [get_bd_pins nw_2/clka] \
  [get_bd_pins LBMSolver_0/clk]
  connect_bd_net -net s_1_douta  [get_bd_pins s_1/douta] \
  [get_bd_pins LBMSolver_0/cs_data_out]
  connect_bd_net -net s_2_douta  [get_bd_pins s_2/douta] \
  [get_bd_pins LBMSolver_0/cs_n_data_out]
  connect_bd_net -net se_1_douta  [get_bd_pins se_1/douta] \
  [get_bd_pins LBMSolver_0/cse_data_out]
  connect_bd_net -net se_2_douta  [get_bd_pins se_2/douta] \
  [get_bd_pins LBMSolver_0/cse_n_data_out]
  connect_bd_net -net sim_rst_driver_0_omega  [get_bd_pins sim_rst_driver_0/omega] \
  [get_bd_pins LBMSolver_0/omega]
  connect_bd_net -net sim_rst_driver_0_reset  [get_bd_pins sim_rst_driver_0/reset] \
  [get_bd_pins LBMSolver_0/rst]
  connect_bd_net -net sw_1_douta  [get_bd_pins sw_1/douta] \
  [get_bd_pins LBMSolver_0/csw_data_out]
  connect_bd_net -net sw_2_douta  [get_bd_pins sw_2/douta] \
  [get_bd_pins LBMSolver_0/csw_n_data_out]
  connect_bd_net -net w_1_douta  [get_bd_pins w_1/douta] \
  [get_bd_pins LBMSolver_0/cw_data_out]
  connect_bd_net -net w_2_douta  [get_bd_pins w_2/douta] \
  [get_bd_pins LBMSolver_0/cw_n_data_out]
  connect_bd_net -net xlconstant_0_dout  [get_bd_pins xlconstant_0/dout] \
  [get_bd_pins LBMSolver_0/step]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_sim_diagram()

cr_bd_sim_diagram ""
set_property REGISTERED_WITH_MANAGER "1" [get_files sim_diagram.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files sim_diagram.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse [list design_1.bd]] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/basic_lb.gen/sources_1/bd/design_1/hdl/design_1_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse [list design_1.bd]] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}

if { [get_property IS_LOCKED [ get_files -norecurse [list sim_diagram.bd]] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../2ndYear/FPGA_Project/basic_lb/basic_lb.gen/sources_1/bd/sim_diagram/hdl/sim_diagram_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse [list sim_diagram.bd]] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2024} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2024" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "incremental_checkpoint" -value "$proj_dir/${_xil_proj_name_}.srcs/utils_1/imports/synth_1/design_1_wrapper.dcp" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2024} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2024" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
